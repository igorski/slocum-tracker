;-------------------------------------------------------------
; @title "{{meta.title}}"
; @author {{meta.author}}
; @created {{meta.created}}
; @tuning {{meta.tuning}}
;
; generated by Slocum Tracker
; https://github.com/igorski/slocum-tracker

;-------------------------------------------------------------
; CONFIGURATION
;-------------------------------------------------------------
; tempo range 1 (fast) - 10 (slow)

TEMPODELAY equ {{meta.tempo}}

; global normalization of sounds

soundTurnArray
    byte 8, 0, 5, 9
    byte 0, 6, 4, 0

;-------------------------------------------------------------
; SOUND TYPES
;
; This reserves eight of ten possible sounds for the track.
;
; Default Sound Type Setup:
; 000 0 Square  = 4
; 001 1 Bass    = 6
; 010 2 Pitfall = 7
; 011 3 Noise   = 8
;
; 100 4 Buzz    = 15
; 101 5 Lead    = 12
; 110 6 Saw     = 1
; 111 7 Engine  = 3

soundTypeArray
    byte 4, 6, 7, 8
    byte 15, 12, 1, 14

;-------------------------------------------------------------
; HATS
;
; Auto hi-hat playback. Specify the pattern in 32nd notes below.
; 0 = silence, 1 = playing. This pattern is repeated for each
; measure, Slocums hi-hat render is short enough to disregard it
; when writing patterns for other channels.
;
; You can also specify the measure that the high hat
; starts playing with HATSTART.  You may want to have
; and intro part without the high hat then have it
; come in later.  Or if you don't want to use it at all,
; then set HATSTART to 255.
;
; Finally, you can specify the high hat volume (0-15), the
; pitch (0-31), and the high hat sound type.  Refer to the
; table above for sound type values. "I typically use
; sound type 8 (Noise) and pitch 0 which sounds like a pretty
; good high hat. But you may find other interesting settings."

hatPattern
{{hats.pattern}}

HATSTART equ {{hats.start}}

HATVOLUME equ {{hats.volume}}
HATPITCH equ {{hats.pitch}}
HATSOUND equ {{hats.sound}}

;-------------------------------------------------------------
; SONG SEQUENCE
;
; the song 1 and 2 declared here are constants for Slocums Sequencer Kit indicating
; each of the two oscillators we can use to work with two channel audio
; each sequence refers to a pattern defined below
;
; NOTE: max 255 patterns
; NOTE: 255 is required at the end of the list to indicate the end has been reached

song1
{{patterns.channel1sequence}}
    byte 255    ; end / loop

song2
{{patterns.channel2sequence}}
    byte 255    ; end / loop

;-------------------------------------------------------------
; SONG MEASURES
;
; Slocums Sequencer Kit defines two arrays for storing patterns
; "patternArrayH" holds non-attenuated audio while "patternArrayL" can be used
; for defining patterns to be played back at a reduced output
;
; each word contains a set of four patterns, effectively creating
; a full measure of music
;
; NOTE: each array can have a max of 64 sets of each 4 patterns
;
; index for patternArrayH starts at 0, patternArrayL at 128
;
; 1. Higher volume patterns

patternArrayH
{{patterns.patternArrayH}}

; 2. Lower volume patterns (note index starts at 128)

patternArrayL
{{patterns.patternArrayL}}

;-------------------------------------------------------------
; PATTERNS:
;
; - each pattern lasts a quarter note and is divided into 8 steps
;   for 32nd note-precison playback
; - each step specifies pitch and soundtype
; - the pattern arrays defined above assemble the patterns in fours
;   to complete a full measure
;
; NOTE ENTRY:
;
; Each note is encoded with sound type and pitch (i.e. %00111000)
; with the first 3 bits shaping the sound type, remaining 5 bits for pitch
; (255/%11111111 == silence)
; 
; possible sound shapes (keep soundTypeArray defined above in mind, yo)
;
; 000 Square  (high square wave)
; 001 Bass    (fat bass sound)
; 010 Pitfall (sound of hitting a log in pitfall)
; 011 Noise   (white noise)
; 100 Buzz    (hard buzzy sound)
; 101 Lead    (lower square wave)
; 110 Saw     (sounds kind of like a sawtooth wave)
; 111 Engine  (engine sound)
;
; ACCENTS:
;
; The ninth number at the end of each pattern defines which notes
; are accented. 0 = no accent, 1 = yep.
;
; Each of the 8 bits corresponds to each of the 8 notes defined in the pattern

{{patterns.patterns}}
